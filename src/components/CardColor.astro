---
interface Props {
  name: string,
  hex: string,
  rgb: object,
  accent: boolean
}

const { name, hex, rgb } = Astro.props
---



<div class="color-card" style=`--current-color: ${hex}`>

  <h4 class="color-name"><span class="color-dot"></span> {name}</h4>
  <div class="color-values">
    <button class="color-hex copy-button js-copy"><svg class="copy-icon" fill="currentColor" viewBox="0 0 256 256"><path d="M216,32H88a8,8,0,0,0-8,8V80H40a8,8,0,0,0-8,8V216a8,8,0,0,0,8,8H168a8,8,0,0,0,8-8V176h40a8,8,0,0,0,8-8V40A8,8,0,0,0,216,32ZM160,208H48V96H160Zm48-48H176V88a8,8,0,0,0-8-8H96V48H208Z"></path></svg> {hex}</button>
    <!-- @ts-ignore -->
    <button class="color-rgb copy-button js-copy"><svg class="copy-icon" fill="currentColor" viewBox="0 0 256 256"><path d="M216,32H88a8,8,0,0,0-8,8V80H40a8,8,0,0,0-8,8V216a8,8,0,0,0,8,8H168a8,8,0,0,0,8-8V176h40a8,8,0,0,0,8-8V40A8,8,0,0,0,216,32ZM160,208H48V96H160Zm48-48H176V88a8,8,0,0,0-8-8H96V48H208Z"></path></svg> rgb({rgb.r}, {rgb.g}, {rgb.b})</button>
  </div>

</div>




<script>

  const copyElements = document.querySelectorAll('.js-copy')


  for (const element of copyElements) {
    element.addEventListener(
      'click',
      () => {

        // @ts-ignore – innerText exists
        const value = element.innerText
        // @ts-ignore – copyToClipboard exists
        copyToClipboard(value)

      }
    )
  }

</script>





<style lang="scss">

  .color-card {

    --__current-color: var(--current-color, var(--subtext0));


    display: flex; flex-direction: column;
    gap: var(--spacing-s);

    padding: var(--spacing-m) var(--spacing-s);

    border-radius: var(--border-radius-normal);
    border-bottom: var(--border-radius-normal) solid var(--__current-color);
    background-color: var(--mantle);



    .color-dot {

      display: inline-block;

      height: 2rem; aspect-ratio: 1 / 1;

      border-radius: 9999px;
      background-color: var(--__current-color);

    }



    .color-name {

      display: flex;
      align-items: center;
      gap: var(--spacing-s);

      margin: 0; padding: var(--spacing-xs) 0;

      text-transform: capitalize;

    }



    .color-values {

      display: flex; flex-direction: column;
      gap: var(--spacing-xs);

    }


    .color-hex { text-transform: uppercase; }


    .color-hex,
    .color-rgb {

      grid-column: span 2;

      padding: var(--spacing-xs);

      border-radius: var(--border-radius-normal);
      background-color: var(--crust);

      transition: background-color 350ms;


      &:hover { background-color: color-mix(
        in srgb,
        var(--mantle),
        var(--__current-color) 10%
      )}

    }


    .copy-button {

      border: 0px;

      font-size: inherit;
      text-align: left;
      color: inherit;

      cursor: pointer;

    }

    .copy-icon { height: 1.6rem; aspect-ratio: 1 / 1; }

  }

</style>
