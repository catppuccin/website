---
interface Props {
  value: string
}

const { value } = Astro.props
---



<copy-button data-value={value}>
  <button class="btn btn-simple">
    {value}
  </button>
</copy-button>



<script is:inline>

  const copyToClipboard = async (value) => await navigator.clipboard.writeText(value)


  const copyIndicator = (success, element) => {

    const css = success ? 'success' : 'failure'

    element.classList.add(`btn-${css}`)
    return setTimeout(() => element.classList.remove(`btn-${css}`), 1500)

  }



  class CopyButton extends HTMLElement {
    constructor() {

      super()

      const value  = this.dataset.value
      const button = this.querySelector('button')

      button.addEventListener(
        'click',
        () => {
          copyToClipboard(value)
          .then(() => copyIndicator(true, button))
          .catch((error) => {
            console.error(error)
            copyIndicator(false, button)
          })
        }
      )

    }
  }


  customElements.define('copy-button', CopyButton)

</script>





<style lang="scss">



</style>
