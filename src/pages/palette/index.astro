---
import { flavorEntries, type ColorFormat } from "@catppuccin/palette";

import { githubUrl } from "@data/links";

import Default from "@layouts/Default.astro";

import PageIntro from "@components/PageIntro.astro";

import CopyToClipboardIcon from "./_components/CopyToClipboardButton.svelte";
import FlavorName from "./_components/FlavorName.astro";

const toRgb = (rgb: ColorFormat["rgb"]) => {
  return `rgb(${rgb.r}, ${rgb.g}, ${rgb.b})`;
};
const toHsl = (hsl: ColorFormat["hsl"]) => {
  return `hsl(${Math.round(hsl.h)}deg, ${Math.round(hsl.s * 100)}%, ${Math.round(hsl.l * 100)}%)`;
};

const toOklch = (rgb: ColorFormat["rgb"]) => {
  const srgbToLinear = (c: number) => (c <= 0.04045 ? c / 12.92 : ((c + 0.055) / 1.055) ** 2.4);
  const rLin = srgbToLinear(rgb.r / 255);
  const gLin = srgbToLinear(rgb.g / 255);
  const bLin = srgbToLinear(rgb.b / 255);

  // Convert linear RGB to LMS
  const l = 0.4122214708 * rLin + 0.5363325363 * gLin + 0.0514459929 * bLin;
  const m = 0.2119034982 * rLin + 0.6806995451 * gLin + 0.1073969566 * bLin;
  const s = 0.0883024619 * rLin + 0.2817188376 * gLin + 0.6299787005 * bLin;

  // Convert LMS to OKLab
  const l_ = Math.cbrt(l);
  const m_ = Math.cbrt(m);
  const s_ = Math.cbrt(s);

  const L = 0.2104542553 * l_ + 0.793617785 * m_ - 0.0040720468 * s_;
  const a = 1.9779984951 * l_ - 2.428592205 * m_ + 0.4505937099 * s_;
  const b_ = 0.0259040371 * l_ + 0.7827717662 * m_ - 0.808675766 * s_;

  // Convert OKLab to OKLCH
  const C = Math.sqrt(a * a + b_ * b_);
  const h = Math.atan2(b_, a) * (180 / Math.PI);
  const H = h < 0 ? h + 360 : h;

  return `oklch(${(L * 100).toFixed(2)}% ${(C * 100).toFixed(2)} ${H.toFixed(2)}deg)`;
};
---

<Default
  title="Palette • Catppuccin"
  description="Dive into Catppuccin's palette: four unique pastel color palettes named 'flavors'. Ideal for your next project!">
  <PageIntro title="Palette">
    <p>
      Catppuccin consists of 4 beautiful pastel color palettes, named <strong>flavors</strong>. The theme comes in one
      light and three dark variants:
      <ul>
        <li>
          <FlavorName flavor="latte" />: Our lightest theme harmoniously inverting the essence of Catppuccin's dark
          themes.
        </li>
        <li>
          <FlavorName flavor="frappe" />: A less vibrant alternative using subdued colors for a muted aesthetic.
        </li>
        <li>
          <FlavorName flavor="macchiato" />: Medium contrast with gentle colors creating a soothing atmosphere.
        </li>
        <li>
          <FlavorName flavor="mocha" />: The Original — Our darkest variant offering a cozy feeling with color-rich
          accents.
        </li>
      </ul>
      <p>
        If you'd like to use them for your own project, refer to our
        <a href=`${githubUrl}/catppuccin/blob/main/docs/style-guide.md`>style guide</a>
        for general use cases and guidelines. Additionally, you can find integrations with popular frameworks and tools in
        <a href=`${githubUrl}/palette`>catppuccin/palette</a>.
      </p>
    </p>

    <section class="flavor-grid">
      {
        flavorEntries.map(([flavorName, flavor]) => (
          <div class="flavor">
            <details open>
              <summary>
                <h2 id={`flavor-${flavorName}`} class="flavor-name">
                  <FlavorName flavor={flavorName} bold={false} />
                </h2>
              </summary>
              <table class="color-list" cellspacing="0">
                <thead>
                  <tr class="color-list-header">
                    <th>Color</th>
                    <th>Hex</th>
                    <th>RGB</th>
                    <th>HSL</th>
                    <th>OKLCH</th>
                  </tr>
                </thead>
                <tbody>
                  {Object.values(flavor.colors).map(({ hex, rgb, hsl, name }) => (
                    <tr class="color-list-entry" style={`--current-color: ${hex}`}>
                      <td class="color">
                        <h5 class="color-name">{name}</h5>
                      </td>
                      <td class="color-hex">
                        <CopyToClipboardIcon client:load value={hex}>
                          {hex}
                        </CopyToClipboardIcon>
                      </td>
                      <td class="color-rgb">
                        <CopyToClipboardIcon client:load value={toRgb(rgb)}>
                          {toRgb(rgb)}
                        </CopyToClipboardIcon>
                      </td>
                      <td class="color-hsl">
                        <CopyToClipboardIcon client:load value={toHsl(hsl)}>
                          {toHsl(hsl)}
                        </CopyToClipboardIcon>
                      </td>
                      <td>
                        <CopyToClipboardIcon client:load value={toOklch(rgb)}>
                          {toOklch(rgb)}
                        </CopyToClipboardIcon>
                      </td>
                    </tr>
                  ))}
                </tbody>
              </table>
            </details>
          </div>
        ))
      }
    </section>
  </PageIntro>

  <style lang="scss">
    @use "@styles/utils";

    :root {
      --accent-color: var(--mauve);
    }

    summary {
      cursor: pointer;
    }

    .flavor {
      @include utils.containerPadding();
      margin-block-start: var(--space-md);

      border-radius: var(--border-radius-normal);
      background: var(--mantle);

      overflow-x: auto;
    }

    .flavor-name,
    .color-name {
      text-transform: capitalize;
    }

    .flavor-name {
      font-size: inherit;
    }

    .color-list {
      margin-block-start: var(--space-md);
      margin-inline: auto;
    }

    .color-list-entry {
      --__current-color: var(--current-color, var(--text));
    }

    .color-name {
      position: relative;

      margin: 0;
      padding: 0;
      padding-inline-start: 3rem;

      &::before {
        content: "";

        position: absolute;
        left: 0;

        height: 2rem;
        aspect-ratio: 1 / 1;

        border-radius: 9999px;
        border: 1px solid color-mix(in srgb, var(--mantle), var(--surface0) 50%);
        background-color: var(--__current-color);
      }
    }
  </style>
</Default>
