---
import { getCollection, render } from "astro:content";
import LayoutWithClampedFooter from "../../layouts/LayoutWithClampedFooter.astro";
import PageIntro from "../../components/PageIntro.astro";
import Link from "../../components/Link.astro";
import Avatar from "../../components/lists/Avatar.svelte";

export async function getStaticPaths() {
  const posts = await getCollection("blog");
  return posts
    .filter((post) => !post.data.draft)
    .map((post) => ({
      params: { slug: post.slug },
      props: { post },
    }));
}
const { post } = Astro.props;
const { Content } = await render(post);

const formattedDatePosted = new Date(post.data.datePosted).toLocaleDateString("en-US", {
  year: "numeric",
  month: "long",
  day: "numeric",
});
---

<LayoutWithClampedFooter
  title={`${post.data.title} • Catppuccin`}
  description={post.data.summary}
  image={post.data.hero.path}>
  <img src={post.data.hero.path} alt={post.data.title} title={post.data.title} />
  <div class="blog-container">
    <PageIntro title={post.data.title}>
      <p class="article-summary">{post.data.summary}</p>
      <footer class="article-meta">
        <Link href={`https://github.com/${post.data.author.github}`}>
          <Avatar username={post.data.author.github} size={64} wxh={48} />
        </Link>
        <div class="article-meta-text-wrap">
          <p class="article-author-info">
            <span class="article-author-name">{post.data.author.name}</span> • {post.data.author.title}
          </p>
          <p class="article-pubdate">Published on: {formattedDatePosted}</p>
        </div>
      </footer>
    </PageIntro>
    <Content />
    <footer class="article-credit">
      Hero Image by <Link href={post.data.hero.source} external>{post.data.hero.author}</Link> modified with <Link
        href="https://github.com/ozwaldorf/lutgen-rs"
        external>lutgen-rs</Link
      >
    </footer>
  </div>
</LayoutWithClampedFooter>

<style lang="scss">
  @use "../../styles/utils";

  :root {
    --accent-color: var(--yellow);
  }

  img {
    width: 100%;
    aspect-ratio: 16 / 5;
    border-radius: var(--border-radius-normal);
  }

  .blog-container {
    max-width: 69ch;
    margin-inline: auto;
  }

  .article-summary {
    margin-block: calc(var(--space-md) * -1 + 6px) var(--space-md);
    color: var(--overlay1);
  }

  .article-meta {
    display: flex;
    gap: 0 var(--space-sm);
    align-items: center;

    color: var(--overlay1);
    font-size: 80%;

    .article-author-avatar {
      margin: 0;
      padding: 0;
      grid-row: span 2;
    }

    .article-author-info,
    .article-pubdate {
      margin: 0;
      padding: 0;
    }

    .article-author-name {
      color: var(--text);
      font-weight: 600;
    }
  }

  .article-credit {
    margin-block-start: var(--space-lg);
    padding-block-start: var(--space-md);
    border-top: 1px solid var(--surface0);
    color: var(--subtext0);
    font-size: 80%;
  }
</style>
