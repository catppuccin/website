---
import { getCollection, render } from "astro:content";
import { Picture } from "astro:assets";

import Default from "@layouts/Default.astro";

import PageIntro from "@components/PageIntro.astro";
import ProfilePicture from "@components/ProfilePicture.svelte";
import { Icon } from "astro-icon/components";

export async function getStaticPaths() {
  const posts = await getCollection("blog");
  return posts
    .filter((post) => !post.data.draft)
    .map((post) => ({
      params: { id: post.id },
      props: post,
    }));
}
const post = Astro.props;
const { Content, remarkPluginFrontmatter } = await render(post);

const formattedDatePosted = new Date(post.data.datePosted).toLocaleDateString("en-US", {
  year: "numeric",
  month: "long",
  day: "numeric",
});

const authorSep = (index: number) => {
  if (post.data.authors.length === 1) {
    return ""; // no separator needed
  } else if (post.data.authors.length === 2) {
    return index === 0 ? " & " : ""; // The only separator is " and "
  } else {
    // For three or more authors
    if (index < post.data.authors.length - 2) {
      return ", "; // Use ", " for all but last
    } else if (index === post.data.authors.length - 2) {
      return " & "; // Use " and " for last
    }
  }
};
---

<Default
  title={`${post.data.title} â€¢ Catppuccin`}
  description={post.data.summary}
  ogImage={post.data.hero.image.src}
  enableViewTransition>
  <figure class="blog-hero-image" transition:name=`${post.data.title}${post.data.featured}`>
    <Picture
      src={post.data.hero.image}
      alt={post.data.title}
      formats={["avif", "webp"]}
      widths={[800, 1600, post.data.hero.image.width]}
      sizes={`(max-width: 720px) 800px, (max-width: 1080px) 1600px, ${post.data.hero.image.width}px`}
    />
  </figure>
  <article class="blog-container" role="main" style=`--accent-color: var(--${post.data.accentColor});`>
    <PageIntro title={post.data.title}>
      <p class="article-summary">{post.data.summary}</p>
      <footer class="article-meta">
        <div class="article-author-profiles">
          {post.data.authors.map((author) => <ProfilePicture username={author.github} size={64} wxh={56} />)}
        </div>
        <div>
          <p class="article-author-info">
            Authored by {
              // prettier-ignore
              post.data.authors.map((author, index) => (
                <>
                  <a href={`https://github.com/${author.github}`}>{author.name}</a>{authorSep(index)}
                </>
              ))
            }
          </p>
          <p class="article-pubdate">Published on: {formattedDatePosted}</p>
          <p>{remarkPluginFrontmatter.minutesRead}</p>
        </div>
      </footer>
    </PageIntro>
    <div class="article-content">
      <Content />
    </div>
    <footer class="article-credit">
      <p>
        Hero image by <a href={post.data.hero.source}>{post.data.hero.author}</a> modified with <a
          href="https://github.com/ozwaldorf/lutgen-rs">lutgen-rs</a
        >.
      </p>
      <p>
        Want to keep up-to-date? Subscribe to our <a href="/rss.xml"
          >RSS Feed <Icon class="rss-icon" name="ph:rss-bold" width={24} height={24} /></a
        >
      </p>
    </footer>
  </article>
</Default>

<style lang="scss">
  @use "@styles/utils";

  :root {
    --accent-color: var(--yellow);
  }

  figure {
    max-width: 100%;
    aspect-ratio: 16 / 5;
    margin: 0;

    :global(.blog-hero-image picture, .blog-hero-image img) {
      width: 100%;
      max-width: 100%;
      height: 100%;
      max-height: 100%;
      aspect-ratio: 16 / 5;
      object-fit: cover;
      border-radius: var(--border-radius-normal);
    }
  }

  .blog-container {
    max-width: 69ch;
    margin-inline: auto;
  }

  .article-summary {
    margin-block: calc(var(--space-md) * -1 + 6px) var(--space-md);
    color: var(--overlay1);
  }

  .article-meta {
    display: flex;
    gap: 0 calc(var(--space-sm) + 2px);
    align-items: center;

    color: var(--overlay1);
    font-size: 80%;

    .article-author-profiles :global(img) {
      margin-right: -2px;
    }

    .article-author-info,
    .article-pubdate {
      margin: 0;
      padding: 0;
    }

    p {
      margin: 0;
    }
  }

  .article-content {
    :global(h2),
    :global(h3),
    :global(h4),
    :global(h5),
    :global(h6) {
      margin-block: 1.5em 0.5em;
      // remove extra padding below headlines before the first paragraph
      padding-block: var(--space-xs) 0;
    }

    // all paragraphs inside blog articles
    :global(p) {
      margin-block: 1em;
    }

    // add extra margin to code blocks
    :global(.expressive-code) {
      margin-block: 2em;
    }
  }

  .article-credit {
    margin-block-start: var(--space-lg);
    padding-block-start: var(--space-md);
    border-top: 1px solid var(--surface0);
    color: var(--subtext0);
    font-size: 80%;

    .rss-icon {
      position: relative;
      top: 6px;
    }
  }
</style>
